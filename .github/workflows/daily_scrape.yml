name: Run Scraper and Update Data

on:
  schedule:
    - cron: '0 0 * * *' # Adjust schedule as needed
  workflow_dispatch:

jobs:
  scrape_and_commit: # Give the job a descriptive name
    runs-on: ubuntu-latest
    permissions:      # <--- Add this permissions block
      contents: write # <--- Grant write permission for repository contents

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4 # Use latest checkout action

    - name: Set up Python
      uses: actions/setup-python@v5 # Use latest setup-python action
      with:
        python-version: '3.9' # Or your desired Python version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run scraper script
      env:
        TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        MS_TRANSLATOR_KEY: ${{ secrets.MS_TRANSLATOR_KEY }}
        #MS_TRANSLATOR_REGION: ${{ secrets.MS_TRANSLATOR_REGION }}
      run: python scraper.py # This script modifies headlines.json

    - name: Commit and push changes # <--- Add these steps
      run: |
        # Configure Git user for commits made by the action
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

        # Pull latest changes before attempting to commit/push
        # Helps avoid conflicts if the repo changed since checkout
        git pull

        # Check if the headlines file has changed
        if git diff --quiet headlines.json; then
          echo "No changes detected in headlines.json. Nothing to commit."
          exit 0 # Exit successfully if no changes
        fi

        # Stage, commit, and push if changes were detected
        echo "Changes detected in headlines.json. Committing..."
        git add headlines.json # Make sure this matches the file your script modifies
        # Dynamically create commit message with current date (using runner's timezone - likely UTC)
        # Alternatively, set TZ for specific timezone: TZ='Asia/Taipei' date +'%Y-%m-%d'
        COMMIT_DATE=$(date +'%Y-%m-%d')
        git commit -m "Update headlines for $COMMIT_DATE"
        git push
      env:
          # Needed if your repo uses GITHUB_TOKEN for authentication, which is default
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}